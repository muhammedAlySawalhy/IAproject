let UserModel;_0e8‍.w("../models/UserModel",[["default",["UserModel"],function(v){UserModel=v}]]);const express = require("express");


const AuthController = require("../controllers/AuthController");
const router = express.Router();

// Signup Route

router.post("/signup", async (req, res) => {
  const { username, email, password } = req.body;

  // Create a new user object with the given properties
  const newUser = new UserModel(username, password);

  // Insert the new user into the database
  const createUserResult = await AuthController.createUser(newUser);

  // Get the ID of the created user
  const userId = createUserResult.id;

  // Insert the new patient into the database with the user ID
  await AuthController.createPatient({
    name: username,
    email: email,
    userId: userId,
  });

  // Send response back to the client
  res.send({ success: true, message: "User created successfully" });
});

// Login Route
router.post("/login", async (req, res) => {
  const { username, password } = req.body;
  // Find the user with the given username
  const user = await AuthController.getUser(username);
  _0e8‍.g.console.log(user, "user");
  if (user.success) {
    // Check if the password matches
    if (user.data.password == password) {
      // Check if the user has admin privileges
      if (user.data.is_admin == true) {
        res.send({ success: true, message: "Admin logged in" });
      } else {
        res.send(user);
      }
    } else {
      res.status(401).send({ message: "Invalid password" });
    }
  } else {
    res.status(user.status).send({ message: "User not found" });
  }
});

module.exports = router;
